include ip_node.lib

Net = scapy.Net
UDP = scapy.UDP
BOOTP = scapy.BOOTP
DHCP = scapy.DHCP

class DHCP_Server(IP_Node):
    def __init__(self, pool=None, gateway=None, netmask=None, broadcast=None, domain=None, renewal_time=60, lease_time=1800, **kwargs):
        IP_Node.__init__(self, **kwargs)
        self.leases = {}
        self.pool = []
        self._add_to_pool(pool)
        self.gateway = gateway
        self.netmask = netmask
        self.broadcast = broadcast
        self.domain = domain
        self.renewal_time = renewal_time
        self.lease_time = lease_time
    def _add_to_pool(self, ip):
        if isinstance(ip, str):
	    if not ip in self.pool:
	        self.pool.append(ip)
	else:
	    for i in ip:
	        self._add_to_pool(i)
    def handle(self, dev, p):
        IP_Node.handle(self, dev, p)
        if BOOTP in p:
            mac = p[Ether].src
            if not mac in self.leases:
                if not self.pool:
                    return
                self.leases[mac] = self.pool.pop()
            ip = self.leases[mac]
            msg = Ether(src=self.mac, dst=p[Ether].src)/IP(src=self.ip, dst=p[IP].src)/UDP(sport=p[UDP].dport, dport=p[UDP].sport)/p[BOOTP].copy()
            msg[BOOTP].op = "BOOTREPLY"
            msg[BOOTP].yiaddr = ip
            msg[BOOTP].siaddr = self.ip
            msg[BOOTP].ciaddr = self.ip
            msg[BOOTP].giaddr = self.gateway
            msg[BOOTP].payload = None
            if DHCP in p:
                dhcp_options = [(op[0],{1:2,3:5}.get(op[1],op[1])) for op in p[DHCP].options if type(op) is tuple and op[0] == "message-type"]
                dhcp_options += [("server_id",self.ip), ("router", self.gateway), ("name_server", self.gateway), 
                                 ("broadcast_address", self.broadcast), ("domain", self.domain), ("subnet_mask", self.netmask),
                                 ("renewal_time", self.renewal_time), ("lease_time", self.lease_time), "end"]
                msg = msg/DHCP(options=dhcp_options)
            send(dev, msg)
k
