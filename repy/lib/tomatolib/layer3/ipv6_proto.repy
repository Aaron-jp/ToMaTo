
#ifndef ipv6_proto_loaded
#define ipv6_proto_loaded

ETHERNET_TYPE_IPv6 = 0x86dd

def ipv6_decode(p):
    h = Header()
    (ver_tc_fl, payload_length, h.next_header, h.hop_limit) = struct_unpack("!IHBB", p[0:8])
    h.version = ver_tc_fl >> 28
    h.traffic_class = (ver_tc_fl >> 20) & 0xff
    h.flow_label = ver_tc_fl & 0x0fffff
    h.src = p[8:24]
    h.dst = p[24:40]
    h.payload = p[40:40+payload_length]
    return h

def ipv6_encode(src, dst, protocol, payload, version=6, traffic_class=0, flow_label=0, hop_limit=64):
    ver_tc_fl = ((version & 0x0f) << 28) | ((traffic_class & 0xff) << 20) | (flow_label & 0x0fffff)
    p = struct_pack("!IHBB", [ver_tc_fl, len(payload), protocol, hop_limit]) + src + dst + payload
    return p

#endif